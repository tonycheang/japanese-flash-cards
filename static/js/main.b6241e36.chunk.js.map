{"version":3,"sources":["Deck.js","CardDisplay.js","UserInputDisplay.js","FlashCardApp.js","TagsModal.js","Site.js","serviceWorker.js","index.js"],"names":["Card","front","back","tags","Object","classCallCheck","this","check","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","tag","push","input","slice","length","Deck","cards","usedInActive","map","active","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","card","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","createClass","key","other","concat","_this","forEach","activeTags","_this2","cardID","keys","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","isTagged","Math","floor","random","CardDisplay","react_default","a","createElement","style","fontSize","margin","props","data","React","Component","inputFieldStyle","backgroundColor","textAlign","UserInputDisplay","align","width","autoFocus","ghost","placeholder","defaultText","onChange","FlashCardApp","possibleConstructorReturn","getPrototypeOf","call","handleInput","bind","assertThisInitialized","reportCorrectness","readForm","showAnswer","resetInputAfterTyping","resetInput","resetInputAfterReveal","defaultBackgroundColor","state","typed","textColor","border","firstTimeTyping","window","addEventListener","removeEventListener","event","setState","justRevealed","curText","test","typingTimer","clearTimeout","setTimeout","currentCard","answer","toLowerCase","startsWith","hasAnswer","delay","nextCard","changeCard","empty","description","image","Empty","PRESENTED_IMAGE_SIMPLE","displayButton","es_button","type","size","onClick","className","src_CardDisplay","src_UserInputDisplay","TagsModal","handleClose","tagsStartingStatuses","tagsStatuses","savedSettings","JSON","parse","localStorage","getItem","defaultToggle","columns","title","dataIndex","render","_","record","es_switch","defaultChecked","checked","changed","entries","_ref","_ref2","slicedToArray","startingStatus","filter","rebuildActive","_ref3","_ref4","setItem","stringify","message","success","closeModal","dataSource","i","modal","visible","onCancel","cancelButtonProps","disabled","onOk","table","Site","openMenu","closeMenu","selectMenuItem","startingActive","basic hiragana","deck","zipAndAppendToDeck","characters","phonetics","char","append","defaultDeck","buildDefaultDeck","getNextCard","menuOpen","selected","navBar","menu","mode","height","selectedKeys","Item","icon","float","marginRight","src_TagsModal","marginTop","src_FlashCardApp_0","Boolean","location","hostname","match","ReactDOM","src_Site_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6241e36.chunk.js","sourcesContent":["class Card {\n    // Can expand to approximate matching later if desired\n    constructor(front, back, tags) {\n        this.front = front;\n        this.back = back;\n        this.tags = tags || [];\n    }\n\n    isTagged(check) {\n        for (let tag of this.tags) {\n            if (tag === check)\n                return true;\n        }\n        return false;\n    }\n\n    appendTag(tag) {\n        this.tags.push(tag);\n    }\n\n    hasAnswer(input) {\n        return input === this.back;\n    }\n\n    startsWith(input) {\n        return input === this.back.slice(0, input.length);\n    }\n}\n\nexport class Deck {\n    constructor(cards) {\n        this.cards = cards || [];\n        this.usedInActive = this.cards.map(() => { return false });\n        // Check correctness of empty array here\n        this.active = [];\n        this.tags = {};\n        // Deck keeps track of all active (true) and non-active (false) tags\n        for (let card of this.cards) {\n            for (let tag of card.tags) {\n                this.tags[tag] = false;\n            }\n        }\n    }\n\n    combineDeck(other) {\n        let allCards = this.cards.concat(other.cards);\n        return new Deck(allCards);\n    }\n\n    append(card) {\n        this.cards.push(card);\n        card.tags.forEach((tag) => { this.tags[tag] = true })\n        this.usedInActive.push(false);\n    }\n\n    remove(card) {\n        // to do\n    }\n\n    rebuildActive(activeTags) {\n        // Reset active cards, tags, and usedInActive flags\n        this.active = [];\n        Object.keys(this.tags).map((tag) => { this.tags[tag] = false })\n        this.usedInActive = this.cards.map(() => { return false });\n\n        activeTags.map((tag) => { this.tags[tag] = true })\n        // Add all cards with selected tags\n        for (let cardID in this.cards) {\n            let card = this.cards[cardID];\n            for (let tag of activeTags) {\n                // Avoid appedning duplicate cards\n                if (card.isTagged(tag) && !this.usedInActive[cardID]) {\n                    this.active.push(this.cards[cardID]);\n                    this.usedInActive[cardID] = true;\n                }\n            }\n        }\n    }\n\n    getNextCard() {\n        if (this.active.length === 0) {\n            return new Card(\"No active cards!\");\n        }\n        // Can add SRS system here with heap later or generate a exhaust a full ordering\n        return this.active[Math.floor(this.active.length * Math.random())];\n    }\n}\n\nexport function buildDefaultDeck(activeTags) {\n    function zipAndAppendToDeck(characters, phonetics, tag, deck) {\n        let zipped = characters.map((char, i) => new Card(char, phonetics[i], [tag]));\n        zipped.forEach((card) => deck.append(card));\n    }\n\n    let defaultDeck = new Deck();\n\n    const hiraganaSeiOnPhonetic = ['a', 'i', 'u', 'e', 'o',\n        'ka', 'ki', 'ku', 'ke', 'ko',\n        'sa', 'shi', 'su', 'se', 'so',\n        'ta', 'chi', 'tsu', 'te', 'to',\n        'na', 'ni', 'nu', 'ne', 'no',\n        'ha', 'hi', 'fu', 'he', 'ho',\n        'ma', 'mi', 'mu', 'me', 'mo',\n        'ya', 'yu', 'yo',\n        'ra', 'ri', 'ru', 're', 'ro',\n        'wa', 'wo', 'n'\n    ];\n    const hiraganaSeiOn = ['あ', 'い', 'う', 'え', 'お',\n        'か', 'き', 'く', 'け', 'こ',\n        'さ', 'し', 'す', 'せ', 'そ',\n        'た', 'ち', 'つ', 'て', 'と',\n        'な', 'に', 'ぬ', 'ね', 'の',\n        'は', 'ひ', 'ふ', 'へ', 'ほ',\n        'ま', 'み', 'む', 'め', 'も',\n        'や', 'ゆ', 'よ',\n        'ら', 'り', 'る', 'れ', 'ろ',\n        'わ', 'を', 'ん'\n    ];\n\n    const hiraganaDakuOnPhonetic = [\"ga\", \"gi\", \"gu\", \"ge\", \"go\",\n        \"za\", \"ji\", \"zu\", \"ze\", \"zo\",\n        \"da\", \"ji\", \"zu\", \"de\", \"do\",\n        \"ba\", \"bi\", \"bu\", \"be\", \"bo\",\n        \"pa\", \"pi\", \"pu\", \"pe\", \"po\",\n    ];\n    const hiraganaDakuOn = [\"が\", \"ぎ\", \"ぐ\", \"げ\", \"ご\",\n        \"ざ\", \"じ\", \"ず\", \"ぜ\", \"ぞ\",\n        \"だ\", \"ぢ\", \"づ\", \"で\", \"ど\",\n        \"ば\", \"び\", \"ぶ\", \"べ\", \"ぼ\",\n        \"ぱ\", \"ぴ\", \"ぷ\", \"ぺ\", \"ぽ\",\n    ];\n\n    const hiraganaYoOnPhoenetic = [\"kya\", \"kyu\", \"kyo\",\n        \"sha\", \"shu\", \"sho\",\n        \"cha\", \"chu\", \"cho\",\n        \"nya\", \"nyu\", \"nyo\",\n        \"hya\", \"hyu\", \"hyo\",\n        \"mya\", \"myu\", \"myo\",\n        \"rya\", \"ryu\", \"ryo\",\n        \"gya\", \"gyu\", \"gyo\",\n        \"ja\", \"ju\", \"jo\",\n        \"bya\", \"byu\", \"byo\",\n        \"pya\", \"pyu\", \"pyo\",\n\n    ];\n    const hiraganaYoOn = [\"きゃ\", \"きゅ\", \"きょ\",\n        \"しゃ\", \"しゅ\", \"しょ\",\n        \"ちゃ\", \"ちゅ\", \"ちょ\",\n        \"にゃ\", \"にゅ\", \"にょ\",\n        \"ひゃ\", \"ひゅ\", \"ひょ\",\n        \"みゃ\", \"みゅ\", \"みょ\",\n        \"りゃ\", \"りゅ\", \"りょ\",\n        \"ぎゃ\", \"ぎゅ\", \"ぎょ\",\n        \"じゃ\", \"じゅ\", \"じょ\",\n        \"びゃ\", \"びゅ\", \"びょ\",\n        \"ぴゃ\", \"ぴゅ\", \"ぴょ\"\n    ];\n\n    const katakanaSeiOnPhonetic = [\"a\", \"i\", \"u\", \"e\", \"o\",\n        \"ka\", \"ki\", \"ku\", \"ke\", \"ko\",\n        \"sa\", \"shi\", \"su\", \"se\", \"so\",\n        \"ta\", \"chi\", \"tsu\", \"te\", \"to\",\n        \"na\", \"ni\", \"nu\", \"ne\", \"no\",\n        \"ha\", \"hi\", \"fu\", \"he\", \"ho\",\n        \"ma\", \"mi\", \"mu\", \"me\", \"mo\",\n        \"ya\", \"yu\", \"yo\",\n        \"ra\", \"ri\", \"ru\", \"re\", \"ro\",\n        \"wa\", \"wo\", \"n\",\n    ];\n    const katakanaSeiOn = [\"ア\", \"イ\", \"ウ\", \"エ\", \"オ\",\n        \"カ\", \"キ\", \"ク\", \"ケ\", \"コ\",\n        \"サ\", \"シ\", \"ス\", \"セ\", \"ソ\",\n        \"タ\", \"チ\", \"ツ\", \"テ\", \"ト\",\n        \"ナ\", \"ニ\", \"ヌ\", \"ネ\", \"ノ\",\n        \"ハ\", \"ヒ\", \"フ\", \"ヘ\", \"ホ\",\n        \"マ\", \"ミ\", \"ム\", \"メ\", \"モ\",\n        \"ヤ\", \"ユ\", \"ヨ\",\n        \"ラ\", \"リ\", \"ル\", \"レ\", \"ロ\",\n        \"ワ\", \"ヲ\", \"ン\"\n    ];\n\n    const katakanaDakuOnPhonetic = [\"ga\", \"gi\", \"gu\", \"ge\", \"go\",\n        \"za\", \"ji\", \"zu\", \"ze\", \"zo\",\n        \"da\", \"ji\", \"zu\", \"de\", \"do\",\n        \"ba\", \"bi\", \"bu\", \"be\", \"bo\",\n        \"pa\", \"pi\", \"pu\", \"pe\", \"po\"\n    ];\n    const katakanaDakuOn = [\"ガ\", \"ギ\", \"グ\", \"ゲ\", \"ゴ\",\n        \"ザ\", \"ジ\", \"ズ\", \"ゼ\", \"ゾ\",\n        \"ダ\", \"ヂ\", \"ヅ\", \"デ\", \"ド\",\n        \"バ\", \"ビ\", \"ブ\", \"ベ\", \"ボ\",\n        \"パ\", \"ピ\", \"プ\", \"ペ\", \"ポ\"\n    ];\n\n    const katakanaYoOnPhonetic = [\"キャ\", \"キュ\", \"キョ\",\n        \"シャ\", \"シュ\", \"ショ\",\n        \"チャ\", \"チュ\", \"チョ\",\n        \"ニャ\", \"ニュ\", \"ニョ\",\n        \"ヒャ\", \"ヒュ\", \"ヒョ\",\n        \"ミャ\", \"ミュ\", \"ミョ\",\n        \"リャ\", \"リュ\", \"リョ\",\n        \"ギャ\", \"ギュ\", \"ギョ\",\n        \"ジャ\", \"ジュ\", \"ジョ\",\n        \"ビャ\", \"ビュ\", \"ビョ\",\n        \"ピャ\", \"ピュ\", \"ピョ\"\n    ];\n    const katakanaYoOn = [\"kya\", \"kyu\", \"kyo\",\n        \"sha\", \"shu\", \"sho\",\n        \"cha\", \"chu\", \"cho\",\n        \"nya\", \"nyu\", \"nyo\",\n        \"hya\", \"hyu\", \"hyo\",\n        \"mya\", \"myu\", \"myo\",\n        \"rya\", \"ryu\", \"ryo\",\n        \"gya\", \"gyu\", \"gyo\",\n        \"ja\", \"ju\", \"jo\",\n        \"bya\", \"byu\", \"byo\",\n        \"pya\", \"pyu\", \"pyo\",\n    ];\n\n    const katakanaForeignPhonetic = [\"fa\", \"fi\", \"fe\", \"fo\", \"fyu\",\n        \"wi\", \"we\", \"wo\", \"va\", \"vi\", \"ve\", \"vo\",\n        \"tsa\", \"tsi\", \"tse\", \"tso\",\n        \"che\", \"she\", \"je\",\n        \"ti\", \"di\", \"du\", \"tu\"\n    ];\n    const katakanaForeign = [\"ファ\", \"フィ\", \"フェ\", \"フォ\", \"フュ\",\n        \"ウィ\", \"ウェ\", \"ウォ\", \"ヴァ\", \"ヴィ\", \"ヴェ\", \"ヴォ\",\n        \"ツァ\", \"ツィ\", \"ツェ\", \"ツォ\", \"チェ\", \"シェ\", \"ジェ\",\n        \"ティ\", \"ディ\", \"デュ\", \"トゥ\"\n    ];\n\n    zipAndAppendToDeck(hiraganaSeiOn, hiraganaSeiOnPhonetic, \"basic hiragana\", defaultDeck);\n    zipAndAppendToDeck(hiraganaDakuOn, hiraganaDakuOnPhonetic, \"voiced hiragana\", defaultDeck);\n    zipAndAppendToDeck(hiraganaYoOn, hiraganaYoOnPhoenetic, \"contracted hiragana\", defaultDeck);\n    zipAndAppendToDeck(katakanaSeiOn, katakanaSeiOnPhonetic, \"basic katakana\", defaultDeck);\n    zipAndAppendToDeck(katakanaDakuOn, katakanaDakuOnPhonetic, \"voiced katakana\", defaultDeck);\n    zipAndAppendToDeck(katakanaYoOn, katakanaYoOnPhonetic, \"contracted katakana\", defaultDeck);\n    zipAndAppendToDeck(katakanaForeign, katakanaForeignPhonetic, \"foreign katakana\", defaultDeck);\n\n    defaultDeck.rebuildActive(activeTags);\n    return defaultDeck;\n}","import React from 'react';\n\nclass CardDisplay extends React.Component {\n    render(){\n        return (\n            <div style={{fontSize: 70, margin: \"2%\"}}>\n                {this.props.data}\n            </div>\n        )\n    }\n}\n\nexport default CardDisplay;","import React from 'react';\nimport Input from 'antd/es/input';\n\nconst inputFieldStyle = {\n    backgroundColor: \"transparent\",\n    // border: \"none\",\n    fontSize: 20,\n    textAlign: \"center\"\n}\n\nclass UserInputDisplay extends React.Component {\n    render() {\n        return (\n            <div align=\"center\" style={{margin: \"2%\", width: \"80%\"}}>\n                <Input autoFocus ghost=\"true\"\n                    placeholder={this.props.defaultText}\n                    value={this.props.data}\n                    style={inputFieldStyle}\n                    onChange={this.props.onChange}>\n                </Input>\n            </div>\n        )\n    }\n}\n\nexport default UserInputDisplay;","import React from 'react';\nimport CardDisplay from './CardDisplay';\nimport UserInputDisplay from './UserInputDisplay';\nimport { Button, Empty } from 'antd'\nimport './FlashCardApp.css';\n\nclass FlashCardApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = this.handleInput.bind(this);\n    this.reportCorrectness = this.reportCorrectness.bind(this);\n    this.readForm = this.readForm.bind(this);\n    this.showAnswer = this.showAnswer.bind(this);\n    this.resetInputAfterTyping = this.resetInput.bind(this, 500);\n    this.resetInputAfterReveal = this.resetInput.bind(this, 0, true);\n\n    this.defaultBackgroundColor = \"#FFFFFF\";\n\n    this.state = {\n      typed: \"\",\n      textColor: \"#000000\",\n      backgroundColor: this.defaultBackgroundColor,\n      border: \"1px solid\",\n      firstTimeTyping: true\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleInput);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleInput);\n  }\n\n  handleInput(event) {\n    if (this.state.firstTimeTyping)\n      this.setState({ firstTimeTyping: false });\n\n    if (event.key === \"Enter\" || event.key === \" \") {\n      if (this.state.justRevealed)\n        this.resetInputAfterReveal();\n      else\n        this.showAnswer();\n    }\n\n    let curText = this.state.typed;\n    let isLetter = /^\\w$/;\n    if (event.key === \"Backspace\") {\n      if (curText.length > 0) {\n        this.setState({ typed: curText.slice(0, curText.length - 1) })\n      }\n    } else if (isLetter.test(event.key)) {\n      this.setState((state) => state.typed += event.key)\n    } else {\n      // Do not extend timer for input or report correctness\n      return;\n    }\n\n    // Extend the timer to recognize input if it exists, otherwise make one\n    if (this.state.typingTimer)\n      clearTimeout(this.state.typingTimer);\n    this.setState({ typingTimer: setTimeout(this.reportCorrectness, 300) });\n  }\n\n  readForm(event) {\n    // Temp holder while using window.addEventListener(\"keydown\", this.handleInput);\n    // console.log(event.target.value);\n  }\n\n  showAnswer(event) {\n    // event.preventDefault();\n    // event.stopPropagation();\n    if (this.state.firstTimeTyping)\n      this.setState({ firstTimeTyping: false });\n\n    this.setState({ justRevealed: true, typed: this.props.currentCard.back })\n  }\n\n  reportCorrectness() {\n    /* Flashes red or green on the page depending on input correctness */\n\n    // Don't accept input if card got revealed\n    if (this.state.justRevealed)\n      return;\n\n    let currentCard = this.props.currentCard;\n    let answer = currentCard.back;\n    let typed = this.state.typed.toLowerCase();\n\n    // Don't report if the first few characters are correct\n    if (typed.length < answer.length) {\n      if (currentCard.startsWith(typed))\n        return;\n    }\n\n    if (currentCard.hasAnswer(typed)) {\n      this.setState({ backgroundColor: \"#f6ffed\", border: \"1px solid #b7eb8f\" });\n      this.resetInputAfterTyping(true);\n    } else {\n      this.setState({ backgroundColor: \"#fff1f0\", border: \"1px solid #ffa39e\" });\n      this.resetInputAfterTyping(false);\n    }\n  }\n\n  resetInput(delay, nextCard) {\n    /* Used to create partial functions via method.bind() for callback */\n    if (nextCard) {\n      this.setState({typed: \"\"})\n      this.props.changeCard();\n    }\n    setTimeout(() => this.setState({ backgroundColor: this.defaultBackgroundColor, border: \"1px solid\" }), delay)\n    this.setState({ typed: \"\", typingTimer: null, justRevealed: false });\n  }\n\n  render() {\n    let card = this.props.currentCard;\n    if (card.front === \"No active cards!\")\n      card.front = <Empty description=\"No active cards!\" image={Empty.PRESENTED_IMAGE_SIMPLE} />;\n\n    let defaultText = this.state.firstTimeTyping ? \"type the phonetic translation\" : \"\";\n\n    let displayButton;\n    if (this.state.justRevealed)\n      displayButton = <Button type=\"default\" size=\"large\" onClick={this.resetInputAfterReveal}\n        style={{ backgroundColor: \"transparent\", margin: \"2%\" }}>continue</Button>;\n    else\n      displayButton = <Button type=\"default\" size=\"large\" onClick={this.showAnswer}\n        style={{ backgroundColor: \"transparent\", margin: \"2%\" }}>show</Button>\n\n    return (\n      <div align=\"center\">\n        <div className=\"Card\" style={{\n          backgroundColor: this.state.backgroundColor,\n          border: this.state.border,\n        }}>\n          <CardDisplay data={card.front}></CardDisplay>\n          <UserInputDisplay data={this.state.typed}\n            defaultText={defaultText}\n            textColor={this.state.textColor}\n            onChange={this.readForm}>\n          </UserInputDisplay>\n          <div>{displayButton}</div>\n\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default FlashCardApp;\n","import React from 'react';\nimport { Table, Modal, Switch, message } from \"antd\"\n\nclass TagsModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = this.handleClose.bind(this);\n\n        // To determine whether changes were made (e.g. two toggles on same toggle is not a change)\n        this.tagsStartingStatuses = {}\n        this.tagsStatuses = {};\n\n        let savedSettings = JSON.parse(localStorage.getItem(\"activeTags\"));\n\n        // Populate values from local storage, if they exist.\n        Object.keys(this.props.tags).forEach((tag) => {\n            let defaultToggle = savedSettings[tag] || false;\n            this.tagsStatuses[tag] = defaultToggle;\n            this.tagsStartingStatuses[tag] = defaultToggle;\n        });\n\n        this.columns = [\n            {\n                title: 'Tag',\n                dataIndex: 'tag',\n                key: 'tag',\n            },\n            {\n                title: 'Active',\n                dataIndex: 'active',\n                key: 'active',\n                render: (_, record) => {\n                    let handleSwitches = (checked) => {\n                        this.tagsStatuses[record.tag] = checked;\n                    }\n\n                    return <Switch defaultChecked={this.tagsStatuses[record.tag]}\n                        onChange={handleSwitches}>\n                    </Switch>;\n                }\n            }\n        ];\n    }\n\n    handleClose() {\n        // Determine if anything changed\n        let changed = false;\n        Object.entries(this.tagsStartingStatuses).forEach(([tag, startingStatus]) => {\n            if (this.tagsStatuses[tag] != startingStatus) {\n                changed = true;\n                // Update the starting status for next deck change\n                this.tagsStartingStatuses[tag] = this.tagsStatuses[tag];\n            }\n        })\n\n        // Rebuild deck with active tags\n        if (changed) {\n            let activeTags = Object.keys(this.tagsStatuses).filter((tag) => {\n                return this.tagsStatuses[tag];\n            });\n            this.props.rebuildActive(activeTags);\n\n            // Record the changes in local storage via overwrite\n            let savedSettings = {};\n            Object.entries(this.tagsStatuses).forEach(([tag, active]) => {\n                savedSettings[tag] = active;\n            })\n            localStorage.setItem(\"activeTags\", JSON.stringify(savedSettings));\n\n            this.props.changeCard();\n            message.success(\"Deck rebuilt!\");\n        }\n\n        this.props.closeModal();\n    }\n\n    render() {\n        // Make for ALL tags.\n        let dataSource = Object.keys(this.props.tags).map((tag, i) => {\n            return { key: i, tag: tag }\n        });\n\n        return (\n            <Modal title=\"Active Categories\"\n                visible={this.props.visible}\n                onCancel={this.handleClose}\n                cancelButtonProps={{ disabled: true }}\n                onOk={this.handleClose}>\n                <Table columns={this.columns} dataSource={dataSource}></Table>\n            </Modal>\n        );\n    }\n}\n\nexport default TagsModal;","import React from 'react';\nimport { buildDefaultDeck } from './Deck'\nimport { Icon, Menu, Button } from \"antd\"\nimport FlashCardApp from './FlashCardApp';\nimport TagsModal from './TagsModal'\nimport \"./Site.css\"\n\nclass Site extends React.Component {\n    constructor(props) {\n        super(props);\n        this.openMenu = this.openMenu.bind(this);\n        this.closeMenu = this.closeMenu.bind(this);\n        this.selectMenuItem = this.selectMenuItem.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.changeCard = this.changeCard.bind(this);\n\n        this.startingActive = [];\n\n        // Load existing values if they're there.\n        let savedSettings = JSON.parse(localStorage.getItem(\"activeTags\"));\n\n        if (savedSettings) {\n            Object.entries(savedSettings).forEach(([tag, active]) => {\n                if (active)\n                    this.startingActive.push(tag);\n            })\n        } else {\n            // Otherwise, default to having basic hiragana\n            this.startingActive.push(\"basic hiragana\");\n            savedSettings = { \"basic hiragana\": true };\n            localStorage.setItem(\"activeTags\", JSON.stringify(savedSettings));\n        }\n\n        this.deck = buildDefaultDeck(this.startingActive);\n\n        this.state = {\n            currentCard: this.deck.getNextCard(),\n            menuOpen: false,\n            selected: \"\"\n        }\n\n        this.navBar = (\n\n            <Menu mode=\"horizontal\" style={{ height: \"5%\" }}\n                onClick={this.selectMenuItem}\n                selectedKeys={[this.state.selected]}>\n                <Menu.Item key=\"tags\"><Icon type=\"setting\"></Icon>Kana Options</Menu.Item>\n                <Menu.Item key=\"add\" disabled><Icon type=\"plus-circle\"></Icon>Add Custom Cards</Menu.Item>\n                <Menu.Item key=\"delete\" disabled><Icon type=\"minus-circle\"></Icon>Delete Cards</Menu.Item>\n                <Menu.Item key=\"stats\" disabled><Icon type=\"line-chart\"></Icon>Stats</Menu.Item>\n                <Menu.Item key=\"login\" style={{ float: \"right\", marginRight: \"2%\" }} disabled>\n                    <Icon type=\"login\"></Icon>\n                    Log In\n                            </Menu.Item>\n            </Menu>\n\n\n        );\n    }\n\n    openMenu() {\n        this.setState({ menuOpen: true });\n    }\n\n    closeMenu() {\n        this.setState({ menuOpen: false });\n    }\n\n    closeModal() {\n        this.setState({ selected: \"\" });\n    }\n\n    selectMenuItem(event) {\n        this.setState({ selected: event.key })\n    }\n\n    changeCard() {\n        this.setState({ currentCard: this.deck.getNextCard() });\n    }\n\n    render() {\n        return (\n            <div>\n                {this.navBar}\n                <TagsModal\n                    startingActive={this.startingActive}\n                    tags={this.deck.tags}\n                    closeModal={this.closeModal}\n                    rebuildActive={(activeTags) => { this.deck.rebuildActive(activeTags) }}\n                    changeCard={this.changeCard}\n                    visible={this.state.selected === \"tags\"}>\n                </TagsModal>\n                <div style={{ marginTop: \"1%\" }}>\n                    <header> Flash Cards for Japanese </header>\n                </div>\n                <FlashCardApp currentCard={this.state.currentCard}\n                    changeCard={this.changeCard}></FlashCardApp>\n            </div>\n        )\n    }\n}\n\nexport default Site;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Site from './Site';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Site />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}